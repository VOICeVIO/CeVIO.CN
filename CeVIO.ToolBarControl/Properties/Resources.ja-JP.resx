<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ToolBarMenu_VerticalLocationMiddle" xml:space="preserve">
    <value>中间</value>
  </data>
  <data name="Indicator_TimeMenu_Seconds" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="Indicator_QuantizeMenu_Triplet16" xml:space="preserve">
    <value>1/16(3连音)</value>
  </data>
  <data name="ToolBarMenu_VerticalLocationTop" xml:space="preserve">
    <value>顶部</value>
  </data>
  <data name="ToolBarMenu_VerticalLocationBottom" xml:space="preserve">
    <value>底部</value>
  </data>
  <data name="AutoScrollButtonToolTip" xml:space="preserve">
    <value>播放时自动滚动 [F7]</value>
  </data>
  <data name="ShowVibratoAmplitudeButtonToolTip" xml:space="preserve">
	  <value>显示颤音振幅 [Shift+5]</value>
  </data>
  <data name="EditPitchButtonToolTip" xml:space="preserve">
    <value>音高(PIT)调整 [4]
调整每个音每个时刻的音高（不考虑颤音）。
当与VIA/VIF参数重叠显示时，会额外显示颤音的效果。</value>
  </data>
  <data name="Indicator_TimeMenu_Bars" xml:space="preserve">
    <value>小节</value>
  </data>
  <data name="PenButtonToolTip" xml:space="preserve">
    <value>画笔工具 [Ctrl+3]
乐谱编辑：输入（或移动）音符或标记。
调整界面：调整参数值。按住Alt绘制则可被原始值切断。
（按住左Ctrl：橡皮擦工具）</value>
  </data>
  <data name="ToolBarMenu_HorizontalLocation" xml:space="preserve">
    <value>水平显示位置(_V)</value>
  </data>
  <data name="BulkButtonToolTip" xml:space="preserve">
    <value>范围选择工具 [Ctrl+2]
选择范围内所有的音符或参数值。按住Alt键不吸附量化线。
（按住左Ctrl：画笔工具）</value>
  </data>
  <data name="EraserButtonToolTip" xml:space="preserve">
    <value>橡皮擦工具 [Ctrl+5]
乐谱编辑：删除音符或标记。。
調整界面：清除参数的调整值。(PIT/VIA/VIF)按住Shift绘制可将原始值也无效化。
（按住左Ctrl：选择工具）</value>
  </data>
  <data name="RepeatButtonToolTip" xml:space="preserve">
    <value>循环 [小键盘 /]</value>
  </data>
  <data name="ShowTimingButtonToolTip" xml:space="preserve">
	  <value>显示时间 [Shift+2]</value>
  </data>
  <data name="Indicator_QuantizeMenu_Triplet8" xml:space="preserve">
    <value>1/8(3连音)</value>
  </data>
  <data name="Indicator_QuantizeMenu_Triplet4" xml:space="preserve">
    <value>1/4(3连音)</value>
  </data>
  <data name="Indicator_QuantizeMenu_Triplet2" xml:space="preserve">
    <value>1/2(3连音)</value>
  </data>
  <data name="PlayButtonToolTip" xml:space="preserve">
    <value>播放 [Space]</value>
  </data>
  <data name="Indicator_BeatToolTip" xml:space="preserve">
    <value>光标处的拍子
点击以修改。将会添加到钢琴卷帘的拍子行。</value>
  </data>
  <data name="ToolBarMenu_VerticalLocation" xml:space="preserve">
    <value>垂直显示位置(_H)</value>
  </data>
  <data name="ToolBarMenu_HorizontalLocationRight" xml:space="preserve">
    <value>右侧</value>
  </data>
  <data name="EditTimingButtonToolTip" xml:space="preserve">
    <value>时间(TMG)调整 [2]
点击PIT等按钮的文字部分可以重叠显示。
拖动黑色方框的边界线，可以对整个音符及前后的状态进行整体调整。</value>
  </data>
  <data name="ShowVibratoFrequencyButtonToolTip" xml:space="preserve">
	  <value>显示颤音周期 [Shift+6]</value>
  </data>
  <data name="EditScoreButtonToolTip" xml:space="preserve">
    <value>乐谱编辑 [1]</value>
  </data>
  <data name="ToolBarMenu_HorizontalLocationCenter" xml:space="preserve">
    <value>中间</value>
  </data>
  <data name="ShowPitchButtonToolTip" xml:space="preserve">
	  <value>显示音高 [Shift+4]
当重叠显示时会额外显示颤音效果。</value>
  </data>
  <data name="StopButtonToolTip" xml:space="preserve">
    <value>停止 [小键盘 0]
停止状态下再点击会依次回到播放开始位置、歌曲开头。</value>
  </data>
  <data name="Indicator_QuantizeToolTip" xml:space="preserve">
    <value>音符量化
点击以更换。</value>
  </data>
  <data name="Indicator_TempoToolTip" xml:space="preserve">
    <value>光标处的曲速
点击以修改。将会添加到钢琴卷帘的曲速行。</value>
  </data>
  <data name="BeginMarkerButtonToolTip" xml:space="preserve">
    <value>起点标记</value>
  </data>
  <data name="HeadButtonToolTip" xml:space="preserve">
    <value>回开头 [小键盘 .]</value>
  </data>
  <data name="ShowVolumeButtonToolTip" xml:space="preserve">
	  <value>显示音量 [Shift+3]</value>
  </data>
  <data name="EditVibratoFrequencyButtonToolTip" xml:space="preserve">
    <value>颤音周期(VIF)调整 [6]
点击PIT等按钮的文字部分可以重叠显示。</value>
  </data>
  <data name="LineButtonToolTip" xml:space="preserve">
    <value>直线工具 [Ctrl+4]
乐谱编辑：与画笔工具相同。
调整界面：(除TMG外)绘制直线。按住Alt绘制则可被原始值切断。按住Shift绘制水平线。
（按住左Ctrl：橡皮擦工具）</value>
  </data>
  <data name="Indicator_TimeToolTip" xml:space="preserve">
    <value>时间轴光标位置
鼠标左键指定位置。鼠标右键切换显示方式。</value>
  </data>
  <data name="EditVibratoAmplitudeButtonToolTip" xml:space="preserve">
    <value>颤音振幅(VIA)调整 [5]
点击PIT等按钮的文字部分可以重叠显示。</value>
  </data>
  <data name="EndMarkerButtonToolTip" xml:space="preserve">
    <value>终点标记</value>
  </data>
  <data name="EditVolumeButtonToolTip" xml:space="preserve">
    <value>音量(VOL)调整 [3]
点击PIT等按钮的文字部分可以重叠显示。</value>
  </data>
  <data name="ArrowButtonToolTip" xml:space="preserve">
    <value>选择工具 [Ctrl+1]
乐谱编辑：选择（单个或范围）音符或标记。
调整界面：指定复制或删除的范围。按住Alt键不吸附量化线。
（按住左Ctrl：画笔工具）</value>
  </data>
  <data name="ToolBarMenu_HorizontalLocationLeft" xml:space="preserve">
    <value>左侧</value>
  </data>
  <data name="MasterVolumeToolTipHead" xml:space="preserve">
    <value>主音量:</value>
  </data>
  <data name="MasterVolumeToolTipTail" xml:space="preserve">
    <value>拖拽修改。按住Shift拖拽进行细微修改。
Ctrl+左键单击恢复初始值。双击输入数值。</value>
  </data>
  <data name="ShowAlphaButtonToolTip" xml:space="preserve">
	  <value>显示音色 [Shift+7]</value>
  </data>
  <data name="EditAlphaButtonToolTip" xml:space="preserve">
    <value>音色(ALP)调整 [7]
在时间轴上调整每一时刻的音色。
点击PIT等按钮的文字部分可以重叠显示</value>
  </data>
  <data name="ToolBarMenu_NumericFont" xml:space="preserve">
	  <value>数字字体(_F)</value>
  </data>
  <data name="ToolBarMenu_NumericFontNormal" xml:space="preserve">
	  <value>普通</value>
  </data>
  <data name="ToolBarMenu_NumericFontDot" xml:space="preserve">
	  <value>点阵</value>
  </data>
  <data name="ShowHuskyButtonToolTip" xml:space="preserve">
	  <value>显示沙哑度 [Shift+8]</value>
  </data>
  <data name="EditHuskyButtonToolTip" xml:space="preserve">
	  <value>沙哑度(HUS)调整 [8]
在时间轴上调整每一时刻的沙哑度。</value>
  </data>
</root>